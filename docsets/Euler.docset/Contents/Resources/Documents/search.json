{"Typealiases.html#/s:5Euler5Limbsa":{"name":"Limbs","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:5Euler4Limba":{"name":"Limb","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:5Euler6Digitsa":{"name":"Digits","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:5Euler5Digita":{"name":"Digit","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:5Euler9BigNumbera":{"name":"BigNumber","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:5Euler8BigFloata":{"name":"BigFloat","abstract":"<p>Undocumented</p>"},"Structs/BigInt.html#/s:Sj9MagnitudeQa":{"name":"Magnitude","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sj9magnitude9MagnitudeQzvp":{"name":"magnitude","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz5WordsQa":{"name":"Words","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz5words5WordsQzvp":{"name":"words","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV4sizeSivp":{"name":"size","abstract":"<p>Returns the size of the BigNumber in bits.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV15sizeDescriptionSSvp":{"name":"sizeDescription","abstract":"<p>Returns a formated human readable string that says how much space (in bytes, kilobytes, megabytes, or gigabytes) the BigNumber occupies.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntVyACSicfc":{"name":"init(_:)","abstract":"<p>Create an instance initialized to an integer value.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntVyACSucfc":{"name":"init(_:)","abstract":"<p>Create an instance initialized to an unsigned integer value.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntVyACSgSScfc":{"name":"init(_:)","abstract":"<p>Create an instance initialized to a string value.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV_5radixACSgSS_Sitcfc":{"name":"init(_:radix:)","abstract":"<p>Create an instance initialized to a string with the value of mathematical numerical","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV14prefixedNumberACSgSS_tcfc":{"name":"init(prefixedNumber:)","abstract":"<p>Create an instance initialized to a string with the value of mathematical numerical","parent_name":"BigInt"},"Structs/BigInt.html#/s:s25ExpressibleByFloatLiteralP05floatD0x0cD4TypeQz_tcfc":{"name":"init(floatLiteral:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc":{"name":"init(integerLiteral:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sj7exactlyxSgqd___tcSzRd__lufc":{"name":"init(exactly:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntVyACxcSBRzlufc":{"name":"init(_:)","abstract":"<p>Creates an integer from the given floating-point value, rounding toward zero.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntVyACxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Creates a new instance from the given integer.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV8clampingACx_tcSzRzlufc":{"name":"init(clamping:)","abstract":"<p>Creates a new instance with the representable value that’s closest to the given integer.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV7exactlyACSgx_tcSBRzlufc":{"name":"init(exactly:)","abstract":"<p>Creates an integer from the given floating-point value, if it can be represented","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV18truncatingIfNeededACx_tcSzRzlufc":{"name":"init(truncatingIfNeeded:)","abstract":"<p>Creates a new instance from the bit pattern of the given instance by sign-extending or","parent_name":"BigInt"},"Structs/BigInt.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV8asString5radixSSSi_tF":{"name":"asString(radix:)","abstract":"<p>Returns the BigNumber&rsquo;s value in the given base (radix) as a string.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz8isSignedSbvpZ":{"name":"isSigned","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz8bitWidthSivp":{"name":"bitWidth","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV6signumACyF":{"name":"signum()","abstract":"<p>Returns -1 if this value is negative and 1 if it’s positive; otherwise, 0.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV20trailingZeroBitCountSivp":{"name":"trailingZeroBitCount","abstract":"<p>The number of trailing zeros in this value’s binary representation.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz2lloiyxx_qd__tSzRd__lFZ":{"name":"<<(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz3lleoiyyxz_qd__tSzRd__lFZ":{"name":"<<=(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz2ggoiyxx_qd__tSzRd__lFZ":{"name":">>(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz3ggeoiyyxz_qd__tSzRd__lFZ":{"name":">>=(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV1aoiyA2C_ACtFZ":{"name":"&(_:_:)","abstract":"<p>Returns the result of performing a bitwise AND operation on the two given values.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV2aeoiyyACz_ACtFZ":{"name":"&=(_:_:)","abstract":"<p>Stores the result of performing a bitwise AND operation on the two given values in the","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz1ooiyxx_xtFZ":{"name":"|(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz2oeoiyyxz_xtFZ":{"name":"|=(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz1xoiyxx_xtFZ":{"name":"^(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz2xeoiyyxz_xtFZ":{"name":"^=(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz1topyxxFZ":{"name":"~(_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV1popyA2CFZ":{"name":"+(_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz2peoiyyxz_xtFZ":{"name":"+=(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz1poiyxx_xtFZ":{"name":"+(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:s13SignedNumericP6negateyyF":{"name":"negate()","parent_name":"BigInt"},"Structs/BigInt.html#/s:s13SignedNumericP1sopyxxFZ":{"name":"-(_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz1soiyxx_xtFZ":{"name":"-(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz2seoiyyxz_xtFZ":{"name":"-=(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz1moiyxx_xtFZ":{"name":"*(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz2meoiyyxz_xtFZ":{"name":"*=(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV20quotientAndRemainder10dividingByAC0D0_AC9remaindertAC_tF":{"name":"quotientAndRemainder(dividingBy:)","abstract":"<p>Returns the quotient and remainder of this value divided by the given value.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz1doiyxx_xtFZ":{"name":"/(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz2deoiyyxz_xtFZ":{"name":"/=(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz1roiyxx_xtFZ":{"name":"%(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz2reoiyyxz_xtFZ":{"name":"%=(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:SL1goiySbx_xtFZ":{"name":">(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:SL2leoiySbx_xtFZ":{"name":"<=(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:SL2geoiySbx_xtFZ":{"name":">=(_:_:)","parent_name":"BigInt"},"Structs/BigDouble.html#/s:Sj9MagnitudeQa":{"name":"Magnitude","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:Sj9magnitude9MagnitudeQzvp":{"name":"magnitude","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:Sj7exactlyxSgqd___tcSzRd__lufc":{"name":"init(exactly:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleVyAcA0B3IntVcfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV4sign9numerator11denominatorACSb_Says6UInt64VGAItcfc":{"name":"init(sign:numerator:denominator:)","abstract":"<p>Inits a BigDouble with two Limbs as numerator and denominator</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV_4overAcA0B3IntV_AFtcfc":{"name":"init(_:over:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV_4overACSi_Sitcfc":{"name":"init(_:over:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV_4overACSgSS_SStcfc":{"name":"init(_:over:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleVyACSgSScfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV_5radixACSgSS_Sitcfc":{"name":"init(_:radix:)","abstract":"<p>Create an instance initialized to a string with the value of mathematical numerical system of the specified radix (base).","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleVyACSicfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleVyACSdcfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc":{"name":"init(integerLiteral:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:s25ExpressibleByFloatLiteralP05floatD0x0cD4TypeQz_tcfc":{"name":"init(floatLiteral:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV11descriptionSSvp":{"name":"description","abstract":"<p>returns the current value in a fraction format</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV19fractionDescriptionSSvp":{"name":"fractionDescription","abstract":"<p>returns the current value in a fraction format</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV9precisionSivpZ":{"name":"precision","abstract":"<p>the global percision for all newly created values</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV9precisionSivp":{"name":"precision","abstract":"<p>the precision for the current value</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV18decimalDescriptionSSvp":{"name":"decimalDescription","abstract":"<p>returns the current value in decimal format with the current precision</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV16decimalExpansion26precisionAfterDecimalPoint7roundedSSSi_SbtF":{"name":"decimalExpansion(precisionAfterDecimalPoint:rounded:)","abstract":"<p>Returns the current value in decimal format (always with a decimal point).</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV4sizeSivp":{"name":"size","abstract":"<p>Returns the size of the BigDouble in bits.</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV15sizeDescriptionSSvp":{"name":"sizeDescription","abstract":"<p>Returns a formated human readable string that says how much space","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV7rawDataSb4sign_Says6UInt64VG9numeratorAH11denominatortyF":{"name":"rawData()","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV10isPositiveSbyF":{"name":"isPositive()","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV10isNegativeSbyF":{"name":"isNegative()","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV6isZeroSbyF":{"name":"isZero()","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV8minimizeyyF":{"name":"minimize()","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV7roundedAA0B3IntVyF":{"name":"rounded()","abstract":"<p>If the right side of the decimal is greater than 0.5 then it will round up (ceil),","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV7nthrootyACSiF":{"name":"nthroot(_:)","abstract":"<p>The power of 1/root</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV10squareRootACyF":{"name":"squareRoot()","abstract":"<p>The square root</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:s18AdditiveArithmeticP1poiyxx_xtFZ":{"name":"+(_:_:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1poiyA2C_SdtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1poiyACSd_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1poiyA2C_AA0B3IntVtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1poiyAcA0B3IntV_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:s18AdditiveArithmeticP2peoiyyxz_xtFZ":{"name":"+=(_:_:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2peoiyyACz_SdtFZ":{"name":"+=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV6negateyyF":{"name":"negate()","abstract":"<p>makes the current value negative</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:s13SignedNumericP1sopyxxFZ":{"name":"-(_:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:s18AdditiveArithmeticP1soiyxx_xtFZ":{"name":"-(_:_:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1soiyA2C_SdtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1soiyACSd_ACtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1soiyA2C_AA0B3IntVtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:s18AdditiveArithmeticP2seoiyyxz_xtFZ":{"name":"-=(_:_:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2seoiyyACz_SdtFZ":{"name":"-=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:Sj1moiyxx_xtFZ":{"name":"*(_:_:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1moiyA2C_SdtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1moiyACSd_ACtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1moiyA2C_AA0B3IntVtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1moiyAcA0B3IntV_ACtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:Sj2meoiyyxz_xtFZ":{"name":"*=(_:_:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2meoiyyACz_SdtFZ":{"name":"*=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2mmoiyA2C_SitFZ":{"name":"**(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2mmoiyA2C_AA0B3IntVtFZ":{"name":"**(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2mmoiyA2C_ACtFZ":{"name":"**(_:_:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1doiyA2C_ACtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1doiyA2C_SdtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1doiyA2C_AA0B3IntVtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1doiyACSd_ACtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV11nearlyEqual__7epsilonSbAC_ACSdtFZ":{"name":"nearlyEqual(_:_:epsilon:)","abstract":"<p>An == comparison with an epsilon (fixed then a calculated &ldquo;ULPs&rdquo;)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2eeoiySbAC_SdtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2eeoiySbSd_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2neoiySbAC_ACtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2neoiySbAC_SdtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2neoiySbSd_ACtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1loiySbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1loiySbAC_SdtFZ":{"name":"<(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1loiySbSd_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1goiySbAC_ACtFZ":{"name":">(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1goiySbAC_SdtFZ":{"name":">(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1goiySbSd_ACtFZ":{"name":">(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2leoiySbAC_ACtFZ":{"name":"<=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2leoiySbAC_SdtFZ":{"name":"<=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2leoiySbSd_ACtFZ":{"name":"<=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2geoiySbAC_ACtFZ":{"name":">=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2geoiySbAC_SdtFZ":{"name":">=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2geoiySbSd_ACtFZ":{"name":">=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html":{"name":"BigDouble","abstract":"<p>Undocumented</p>"},"Structs/BigInt.html":{"name":"BigInt","abstract":"<p>BigNumber is an arbitrary precision integer value type. It stores a number in base 2^64 notation"},"Protocols/Node.html#/s:5Euler4NodeP7contentSSvp":{"name":"content","abstract":"<p>Undocumented</p>","parent_name":"Node"},"Protocols/Node.html#/s:5Euler4NodeP4typeSSvp":{"name":"type","abstract":"<p>Undocumented</p>","parent_name":"Node"},"Protocols/Node.html#/s:5Euler4NodeP8childrenSayAaB_pGvp":{"name":"children","abstract":"<p>Undocumented</p>","parent_name":"Node"},"Protocols/Node.html#/s:5Euler4NodeP8evaluateyAA9BigDoubleVSDySSAFGF":{"name":"evaluate(_:)","abstract":"<p>Undocumented</p>","parent_name":"Node"},"Protocols/Node.html#/s:5Euler4NodeP7compileAaB_pyF":{"name":"compile()","abstract":"<p>Undocumented</p>","parent_name":"Node"},"Protocols/Node.html#/s:5Euler4NodeP8toStringSSyF":{"name":"toString()","abstract":"<p>Undocumented</p>","parent_name":"Node"},"Protocols/Node.html#/s:5Euler4NodeP5toTexSSyF":{"name":"toTex()","abstract":"<p>Undocumented</p>","parent_name":"Node"},"Protocols/Node.html":{"name":"Node","abstract":"<p>An entity that helps build a tree when parsing math expressions</p>"},"Functions.html#/s:5Euler3absyAA9BigDoubleVADF":{"name":"abs(_:)","abstract":"<p>Returns the absolute value of the given number.</p>"},"Functions.html#/s:5Euler5flooryAA6BigIntVAA0C6DoubleVF":{"name":"floor(_:)","abstract":"<p>round to largest BigNumber value not greater than base</p>"},"Functions.html#/s:5Euler4ceilyAA6BigIntVAA0C6DoubleVF":{"name":"ceil(_:)","abstract":"<p>round to smallest BigNumber value not less than base</p>"},"Functions.html#/s:5Euler3powyAA9BigDoubleVAD_SitF":{"name":"pow(_:_:)","abstract":"<p>Returns a BigDouble number raised to a given power.</p>"},"Functions.html#/s:5Euler3powyAA9BigDoubleVAD_AA0C3IntVtF":{"name":"pow(_:_:)","abstract":"<p>Returns a BigDouble number raised to a given power.</p>"},"Functions.html#/s:5Euler3powyAA9BigDoubleVAD_ADtF":{"name":"pow(_:_:)","abstract":"<div class=\"aside aside-warning\">"},"Functions.html#/s:5Euler3minyAA9BigDoubleVAD_ADtF":{"name":"min(_:_:)","abstract":"<p>Returns the BigDouble that is the smallest</p>"},"Functions.html#/s:5Euler3maxyAA9BigDoubleVAD_ADtF":{"name":"max(_:_:)","abstract":"<p>Returns the BigDouble that is largest</p>"},"Functions.html#/s:5Euler12permutationsyAA6BigIntVSi_SitF":{"name":"permutations(_:_:)","abstract":"<p>Permutations: <code>n! / (n-k)!</code></p>"},"Functions.html#/s:5Euler26permutationsWithRepititionyAA6BigIntVSi_SitF":{"name":"permutationsWithRepitition(_:_:)","abstract":"<p>Permutations with repetition: <code>n ** k</code></p>"},"Functions.html#/s:5Euler12combinationsyAA6BigIntVSi_SitF":{"name":"combinations(_:_:)","abstract":"<p>Combinations: <code>(n + k - 1)! / (k! * (n - 1)!)</code></p>"},"Functions.html#/s:5Euler26combinationsWithRepititionyAA6BigIntVSi_SitF":{"name":"combinationsWithRepitition(_:_:)","abstract":"<p>Combinations with repetitions: <code>(n + k - 1)! / (k! * (n - 1)!)</code></p>"},"Functions.html#/s:5Euler8steinGcdySays6UInt64VGAE_AEtF":{"name":"steinGcd(_:_:)","abstract":"<p>The binary GCD algorithm, also known as Stein&rsquo;s algorithm, is an algorithm that computes the greatest common divisor of two nonnegative integers. Stein&rsquo;s algorithm uses simpler arithmetic operations than the conventional Euclidean algorithm; it replaces division with arithmetic shifts, comparisons, and subtraction.</p>"},"Functions.html#/s:5Euler3gcdyAA6BigIntVAD_ADtF":{"name":"gcd(_:_:)","abstract":"<p>greatest common divisor.</p>"},"Functions.html#/s:5Euler9gcdEuclidyAA6BigIntVAD_ADtF":{"name":"gcdEuclid(_:_:)","abstract":"<p>Do not use this, extremely slow. Only for testing purposes.</p>"},"Functions.html#/s:5Euler3lcmyAA6BigIntVAD_ADtF":{"name":"lcm(_:_:)","abstract":"<p>lowest (or least) common multiple.</p>"},"Functions.html#/s:5Euler7mod_expyAA6BigIntVAD_A2DtF":{"name":"mod_exp(_:_:_:)","abstract":"<p>Quick exponentiation/modulo algorithm"},"Functions.html#/s:5Euler5nnmodyAA6BigIntVAD_ADtF":{"name":"nnmod(_:_:)","abstract":"<p>Non-negative modulo operation</p>"},"Functions.html#/s:5Euler7mod_addyAA6BigIntVAD_A2DtF":{"name":"mod_add(_:_:_:)","abstract":"<p>Convenience function combinding addition and non-negative modulo operations</p>"},"Enums/Token.html#/s:5Euler5TokenO6SymbolyACSScACmF":{"name":"Symbol(_:)","abstract":"<p>Undocumented</p>","parent_name":"Token"},"Enums/Token.html#/s:5Euler5TokenO6NumberyACSfcACmF":{"name":"Number(_:)","abstract":"<p>Undocumented</p>","parent_name":"Token"},"Enums/Token.html#/s:5Euler5TokenO10ParensOpenyA2CmF":{"name":"ParensOpen","abstract":"<p>Undocumented</p>","parent_name":"Token"},"Enums/Token.html#/s:5Euler5TokenO11ParensCloseyA2CmF":{"name":"ParensClose","abstract":"<p>Undocumented</p>","parent_name":"Token"},"Enums/Token.html#/s:5Euler5TokenO5OtheryACSScACmF":{"name":"Other(_:)","abstract":"<p>Undocumented</p>","parent_name":"Token"},"Enums/Token.html":{"name":"Token","abstract":"<p>Undocumented</p>"},"Classes/Parser.html#/s:5Euler6ParserCyACSScfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"Parser"},"Classes/Parser.html#/s:5Euler6ParserC6tokensACSayAA5TokenOG_tcfc":{"name":"init(tokens:)","abstract":"<p>Undocumented</p>","parent_name":"Parser"},"Classes/Parser.html#/s:5Euler6ParserC5parseAA14ExpressionNodeCyKF":{"name":"parse()","abstract":"<p>Undocumented</p>","parent_name":"Parser"},"Classes/SymbolNode.html#/s:5Euler10SymbolNodeC8toStringSSyF":{"name":"toString()","abstract":"<p>Gives String representation of the node</p>","parent_name":"SymbolNode"},"Classes/SymbolNode.html#/s:5Euler10SymbolNodeC5toTexSSyF":{"name":"toTex()","abstract":"<p>Gives Tex (String) representation of the node</p>","parent_name":"SymbolNode"},"Classes/SymbolNode.html#/c:@M@Euler@objc(cs)SymbolNode(py)description":{"name":"description","abstract":"<p>Undocumented</p>","parent_name":"SymbolNode"},"Classes/SymbolNode.html#/s:5Euler10SymbolNodeC7contentSSvp":{"name":"content","abstract":"<p>Undocumented</p>","parent_name":"SymbolNode"},"Classes/SymbolNode.html#/s:5Euler10SymbolNodeC4typeSSvp":{"name":"type","abstract":"<p>Undocumented</p>","parent_name":"SymbolNode"},"Classes/SymbolNode.html#/s:5Euler10SymbolNodeC8childrenSayAA0C0_pGvp":{"name":"children","abstract":"<p>Undocumented</p>","parent_name":"SymbolNode"},"Classes/SymbolNode.html#/s:5Euler10SymbolNodeCyACSScfc":{"name":"init(_:)","abstract":"<p>Create a SymbolNode</p>","parent_name":"SymbolNode"},"Classes/SymbolNode.html#/s:5Euler10SymbolNodeC7compileAA0C0_pyF":{"name":"compile()","abstract":"<p>Compiles SymbolNode to simpler node (useless here, but required by protocol)</p>","parent_name":"SymbolNode"},"Classes/SymbolNode.html#/s:5Euler10SymbolNodeC8evaluateyAA9BigDoubleVSDySSAFGF":{"name":"evaluate(_:)","abstract":"<p>Converts SymboleNode to BigNumber by replacing unknown value by their parameters. If it fails, it will return 0.</p>","parent_name":"SymbolNode"},"Classes/OperatorNode.html#/s:5Euler12OperatorNodeC8toStringSSyF":{"name":"toString()","abstract":"<p>Gives String representation of the node</p>","parent_name":"OperatorNode"},"Classes/OperatorNode.html#/s:5Euler12OperatorNodeC5toTexSSyF":{"name":"toTex()","abstract":"<p>Gives Tex (String) representation of the node</p>","parent_name":"OperatorNode"},"Classes/OperatorNode.html#/c:@M@Euler@objc(cs)OperatorNode(py)description":{"name":"description","abstract":"<p>Undocumented</p>","parent_name":"OperatorNode"},"Classes/OperatorNode.html#/s:5Euler12OperatorNodeC7contentSSvp":{"name":"content","abstract":"<p>Undocumented</p>","parent_name":"OperatorNode"},"Classes/OperatorNode.html#/s:5Euler12OperatorNodeC4typeSSvp":{"name":"type","abstract":"<p>Undocumented</p>","parent_name":"OperatorNode"},"Classes/OperatorNode.html#/s:5Euler12OperatorNodeC8childrenSayAA0C0_pGvp":{"name":"children","abstract":"<p>Undocumented</p>","parent_name":"OperatorNode"},"Classes/OperatorNode.html#/s:5Euler12OperatorNodeC_8childrenACSS_SayAA0C0_pGtcfc":{"name":"init(_:children:)","abstract":"<p>Creates an OperatorNode</p>","parent_name":"OperatorNode"},"Classes/OperatorNode.html#/s:5Euler12OperatorNodeC7compileAA0C0_pyF":{"name":"compile()","abstract":"<p>Compiles ConstantNode to simpler node (useless here, but required by protocol)</p>","parent_name":"OperatorNode"},"Classes/OperatorNode.html#/s:5Euler12OperatorNodeC8evaluateyAA9BigDoubleVSDySSAFGF":{"name":"evaluate(_:)","abstract":"<p>Converts OperatorNode to BigNumber</p>","parent_name":"OperatorNode"},"Classes/FunctionNode.html#/s:5Euler12FunctionNodeC8toStringSSyF":{"name":"toString()","abstract":"<p>Gives String representation of the node</p>","parent_name":"FunctionNode"},"Classes/FunctionNode.html#/s:5Euler12FunctionNodeC5toTexSSyF":{"name":"toTex()","abstract":"<p>Gives Tex (String) representation of the node</p>","parent_name":"FunctionNode"},"Classes/FunctionNode.html#/c:@M@Euler@objc(cs)FunctionNode(py)description":{"name":"description","abstract":"<p>Undocumented</p>","parent_name":"FunctionNode"},"Classes/FunctionNode.html#/s:5Euler12FunctionNodeC7contentSSvp":{"name":"content","abstract":"<p>Undocumented</p>","parent_name":"FunctionNode"},"Classes/FunctionNode.html#/s:5Euler12FunctionNodeC4typeSSvp":{"name":"type","abstract":"<p>Undocumented</p>","parent_name":"FunctionNode"},"Classes/FunctionNode.html#/s:5Euler12FunctionNodeC8childrenSayAA0C0_pGvp":{"name":"children","abstract":"<p>Undocumented</p>","parent_name":"FunctionNode"},"Classes/FunctionNode.html#/s:5Euler12FunctionNodeC_4argsACSS_SayAA0C0_pGtcfc":{"name":"init(_:args:)","abstract":"<p>Create a SymbolNode</p>","parent_name":"FunctionNode"},"Classes/FunctionNode.html#/s:5Euler12FunctionNodeC7compileAA0C0_pyF":{"name":"compile()","abstract":"<p>Compiles SymbolNode to simpler node (useless here, but required by protocol)</p>","parent_name":"FunctionNode"},"Classes/FunctionNode.html#/s:5Euler12FunctionNodeC8evaluateyAA9BigDoubleVSDySSAFGF":{"name":"evaluate(_:)","abstract":"<p>Converts SymbolNode to BigNumber by replacing unknown value by their parameters. If it fails, it will return 0.</p>","parent_name":"FunctionNode"},"Classes/ParenthesisNode.html#/s:5Euler15ParenthesisNodeC8toStringSSyF":{"name":"toString()","abstract":"<p>Gives String representation of the node</p>","parent_name":"ParenthesisNode"},"Classes/ParenthesisNode.html#/s:5Euler15ParenthesisNodeC5toTexSSyF":{"name":"toTex()","abstract":"<p>Gives Tex (String) representation of the node</p>","parent_name":"ParenthesisNode"},"Classes/ExpressionNode.html#/s:5Euler14ExpressionNodeC8toStringSSyF":{"name":"toString()","abstract":"<p>Gives String representation of the node</p>","parent_name":"ExpressionNode"},"Classes/ExpressionNode.html#/s:5Euler14ExpressionNodeC5toTexSSyF":{"name":"toTex()","abstract":"<p>Gives Tex (String) representation of the node</p>","parent_name":"ExpressionNode"},"Classes/ExpressionNode.html#/c:@M@Euler@objc(cs)ExpressionNode(py)description":{"name":"description","abstract":"<p>Undocumented</p>","parent_name":"ExpressionNode"},"Classes/ExpressionNode.html#/s:5Euler14ExpressionNodeC7contentSSvp":{"name":"content","abstract":"<p>Undocumented</p>","parent_name":"ExpressionNode"},"Classes/ExpressionNode.html#/s:5Euler14ExpressionNodeC4typeSSvp":{"name":"type","abstract":"<p>Undocumented</p>","parent_name":"ExpressionNode"},"Classes/ExpressionNode.html#/s:5Euler14ExpressionNodeC8childrenSayAA0C0_pGvp":{"name":"children","abstract":"<p>Undocumented</p>","parent_name":"ExpressionNode"},"Classes/ExpressionNode.html#/s:5Euler14ExpressionNodeCyAcA0C0_pd_tcfc":{"name":"init(_:)","abstract":"<p>Create a ExpressionNode</p>","parent_name":"ExpressionNode"},"Classes/ExpressionNode.html#/s:5Euler14ExpressionNodeCyACSayAA0C0_pGcfc":{"name":"init(_:)","abstract":"<p>Create a ExpressionNode</p>","parent_name":"ExpressionNode"},"Classes/ExpressionNode.html#/s:5Euler14ExpressionNodeC7compileAA0C0_pyF":{"name":"compile()","abstract":"<p>Compiles ExpressionNode to simpler node (useless here, but required by protocol)</p>","parent_name":"ExpressionNode"},"Classes/ExpressionNode.html#/s:5Euler14ExpressionNodeC8evaluateyAA9BigDoubleVSDySSAFGF":{"name":"evaluate(_:)","abstract":"<p>Converts ExpressionNode to BigNumber</p>","parent_name":"ExpressionNode"},"Classes/ConstantNode.html#/s:5Euler12ConstantNodeC8toStringSSyF":{"name":"toString()","abstract":"<p>Gives String representation of the node</p>","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler12ConstantNodeC5toTexSSyF":{"name":"toTex()","abstract":"<p>Gives Tex (String) representation of the node</p>","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/c:@M@Euler@objc(cs)ConstantNode(py)description":{"name":"description","abstract":"<p>Undocumented</p>","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler12ConstantNodeC7contentSSvp":{"name":"content","abstract":"<p>Undocumented</p>","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler12ConstantNodeC4typeSSvp":{"name":"type","abstract":"<p>Undocumented</p>","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler12ConstantNodeC8childrenSayAA0C0_pGvp":{"name":"children","abstract":"<p>Undocumented</p>","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler12ConstantNodeCyAcA9BigDoubleVcfc":{"name":"init(_:)","abstract":"<p>Create a ConstantNode</p>","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler12ConstantNodeCyACSicfc":{"name":"init(_:)","abstract":"<p>Create a ConstantNode</p>","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler12ConstantNodeCyACSfcfc":{"name":"init(_:)","abstract":"<p>Create a ConstantNode</p>","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler12ConstantNodeCyACSdcfc":{"name":"init(_:)","abstract":"<p>Create a ConstantNode</p>","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler12ConstantNodeC7compileAA0C0_pyF":{"name":"compile()","abstract":"<p>Compiles ConstantNode to simpler node (useless here, but required by protocol)</p>","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler12ConstantNodeC8evaluateyAA9BigDoubleVSDySSAFGF":{"name":"evaluate(_:)","abstract":"<p>Converts ConstantNode to BigNumber</p>","parent_name":"ConstantNode"},"Classes/Lexer.html#/s:5Euler5LexerC8tokenizeSayAA5TokenOGyF":{"name":"tokenize()","abstract":"<p>Undocumented</p>","parent_name":"Lexer"},"Classes/Lexer.html":{"name":"Lexer","abstract":"<p>Undocumented</p>"},"Classes/ConstantNode.html":{"name":"ConstantNode","abstract":"<p>Undocumented</p>"},"Classes/ExpressionNode.html":{"name":"ExpressionNode","abstract":"<p>Undocumented</p>"},"Classes/ParenthesisNode.html":{"name":"ParenthesisNode","abstract":"<p>Undocumented</p>"},"Classes/FunctionNode.html":{"name":"FunctionNode","abstract":"<p>Undocumented</p>"},"Classes/OperatorNode.html":{"name":"OperatorNode","abstract":"<p>Undocumented</p>"},"Classes/SymbolNode.html":{"name":"SymbolNode","abstract":"<p>Undocumented</p>"},"Classes/Parser.html":{"name":"Parser","abstract":"<p>Undocumented</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}