{"Other%20Typealiases.html#/s:5Euler5Limbsa":{"name":"Limbs","abstract":"<p>Undocumented</p>"},"Other%20Typealiases.html#/s:5Euler4Limba":{"name":"Limb","abstract":"<p>Undocumented</p>"},"Other%20Typealiases.html#/s:5Euler6Digitsa":{"name":"Digits","abstract":"<p>Undocumented</p>"},"Other%20Typealiases.html#/s:5Euler5Digita":{"name":"Digit","abstract":"<p>Undocumented</p>"},"Other%20Typealiases.html#/s:5Euler4Bytea":{"name":"Byte","abstract":"<p>Undocumented</p>"},"Structs/Digest.html#/s:5Euler6DigestV6digestSays5UInt8VGvp":{"name":"digest","abstract":"<p>Undocumented</p>","parent_name":"Digest"},"Structs/Digest.html#/s:5Euler6DigestV8checksumSSvp":{"name":"checksum","abstract":"<p>MD5 representation of the <code>Digest</code></p>","parent_name":"Digest"},"Structs/Digest.html":{"name":"Digest","abstract":"<p>A way of representing hash function&rsquo;s digest</p>"},"Other%20Functions.html#/s:5Euler11leastFactoryAA6BigIntVADF":{"name":"leastFactor(_:)","abstract":"<p>Gives you the least (smallest) integer factor of any integer</p>"},"Extensions/Data.html#/s:10Foundation4DataV5EulerE6sha256ACyF":{"name":"sha256()","abstract":"<p>Gives the sha256 hash of any Data</p>","parent_name":"Data"},"Extensions/Data.html":{"name":"Data"},"Extensions/Array.html#/s:Sa5EulerE7flattenySayypGSiF":{"name":"flatten(_:)","abstract":"<p>Flattens the current Array of any type</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa5EulerE8linspace5start3end1nSaySdGSd_SdSitFZ":{"name":"linspace(start:end:n:)","abstract":"<p>This will create a range of number starting from the number <code>a</code>, going to the number <code>b</code> with <code>x</code> numbers in it.</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa5EulerE6arange5start3end4step6offsetSaySdGSd_S3dtFZ":{"name":"arange(start:end:step:offset:)","abstract":"<p>Similar as <code>Array.range</code>, but with more options (start, end, step)</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa5EulerE5rangeySaySiGSiFZ":{"name":"range(_:)","abstract":"<p>This will create a range of number, starting from <code>0</code> up to a number <code>n</code></p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa5EulerE7reshape4partSaySayxGGSi_tF":{"name":"reshape(part:)","abstract":"<p>The reshape function is the opposite of the <code>Array.flatten</code> function. It will group items in an array by <code>x</code> items:</p>","parent_name":"Array"},"Extensions/Array.html":{"name":"Array"},"Extensions/String.html#/s:SS5EulerE3md5SSvp":{"name":"md5","abstract":"<p>MD5 encoding of the String</p>","parent_name":"String"},"Extensions/String.html#/s:SS5EulerE9md5DigestSays5UInt8VGvp":{"name":"md5Digest","abstract":"<p>MD5 Digest of the String as an array of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbOther%20Typealiases.html#/s:5Euler4Bytea\">Byte</a></code></p>","parent_name":"String"},"Extensions/String.html#/s:SS5EulerE6sha256SSvp":{"name":"sha256","abstract":"<p>Gives the sha256 hash of a String</p>","parent_name":"String"},"Extensions/String.html":{"name":"String"},"Classes/NullNode.html#/s:5Euler8NullNodeC8maxDepthSiSgvp":{"name":"maxDepth","abstract":"<p>The depth of the deepest children of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Node.html\">Node</a></code> in a <code>Tree</code></p>","parent_name":"NullNode"},"Classes/NullNode.html#/s:5Euler8NullNodeC5depthSiSgvp":{"name":"depth","abstract":"<p>The depth of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Node.html\">Node</a></code> in a <code>Tree</code></p>","parent_name":"NullNode"},"Classes/NullNode.html#/s:5Euler8NullNodeC8toStringSSyF":{"name":"toString()","abstract":"<p>Gives String representation of the node</p>","parent_name":"NullNode"},"Classes/NullNode.html#/s:5Euler8NullNodeC5toTexSSyF":{"name":"toTex()","abstract":"<p>Gives Tex (String) representation of the node</p>","parent_name":"NullNode"},"Classes/NullNode.html#/c:@M@Euler@objc(cs)NullNode(py)description":{"name":"description","abstract":"<p>Undocumented</p>","parent_name":"NullNode"},"Classes/NullNode.html#/s:5Euler4NodeP7contentSSvp":{"name":"content","parent_name":"NullNode"},"Classes/NullNode.html#/s:5Euler4NodeP4typeSSvp":{"name":"type","parent_name":"NullNode"},"Classes/NullNode.html#/s:5Euler4NodeP8childrenSayAaB_pGvp":{"name":"children","parent_name":"NullNode"},"Classes/NullNode.html#/c:@M@Euler@objc(cs)NullNode(im)init":{"name":"init()","abstract":"<p>Create a NullNode</p>","parent_name":"NullNode"},"Classes/NullNode.html#/s:5Euler8NullNodeC7compileAA0C0_pyF":{"name":"compile()","abstract":"<p>Compiles NullNode to simpler node (useless here, but required by protocol)</p>","parent_name":"NullNode"},"Classes/NullNode.html#/s:5Euler8NullNodeC8evaluateyAA9BigDoubleVSDySSAFGF":{"name":"evaluate(_:)","abstract":"<p>Converts NullNode to BigNumber</p>","parent_name":"NullNode"},"Classes/FunctionNode.html#/s:5Euler12FunctionNodeC8maxDepthSiSgvp":{"name":"maxDepth","abstract":"<p>The depth of the deepest children of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Node.html\">Node</a></code> in a <code>Tree</code></p>","parent_name":"FunctionNode"},"Classes/FunctionNode.html#/s:5Euler12FunctionNodeC5depthSiSgvp":{"name":"depth","abstract":"<p>The depth of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Node.html\">Node</a></code> in a <code>Tree</code></p>","parent_name":"FunctionNode"},"Classes/FunctionNode.html#/s:5Euler12FunctionNodeC8toStringSSyF":{"name":"toString()","abstract":"<p>Gives String representation of the node</p>","parent_name":"FunctionNode"},"Classes/FunctionNode.html#/s:5Euler12FunctionNodeC5toTexSSyF":{"name":"toTex()","abstract":"<p>Gives Tex (String) representation of the node</p>","parent_name":"FunctionNode"},"Classes/FunctionNode.html#/c:@M@Euler@objc(cs)FunctionNode(py)description":{"name":"description","abstract":"<p>The <code>print()</code> description</p>","parent_name":"FunctionNode"},"Classes/FunctionNode.html#/s:5Euler12FunctionNodeC7contentSSvp":{"name":"content","abstract":"<p>The name of the function (ex: <code>sqrt</code>, or <code>factorial</code>)</p>","parent_name":"FunctionNode"},"Classes/FunctionNode.html#/s:5Euler12FunctionNodeC4typeSSvp":{"name":"type","abstract":"<p>The name of the node</p>","parent_name":"FunctionNode"},"Classes/FunctionNode.html#/s:5Euler12FunctionNodeC8childrenSayAA0C0_pGvp":{"name":"children","abstract":"<p>The arguments of the function</p>","parent_name":"FunctionNode"},"Classes/FunctionNode.html#/s:5Euler12FunctionNodeC_4argsACSS_SayAA0C0_pGtcfc":{"name":"init(_:args:)","abstract":"<p>Create a SymbolNode</p>","parent_name":"FunctionNode"},"Classes/FunctionNode.html#/s:5Euler12FunctionNodeC7compileAA0C0_pyF":{"name":"compile()","abstract":"<p>Compiles SymbolNode to simpler node (useless here, but required by protocol)</p>","parent_name":"FunctionNode"},"Classes/FunctionNode.html#/s:5Euler12FunctionNodeC8evaluateyAA9BigDoubleVSDySSAFGF":{"name":"evaluate(_:)","abstract":"<p>Converts SymbolNode to BigNumber by replacing unknown value by their parameters. If it fails, it will return 0.</p>","parent_name":"FunctionNode"},"Classes/OperatorNode.html#/s:5Euler12OperatorNodeC8maxDepthSiSgvp":{"name":"maxDepth","abstract":"<p>The depth of the deepest children of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Node.html\">Node</a></code> in a <code>Tree</code></p>","parent_name":"OperatorNode"},"Classes/OperatorNode.html#/s:5Euler12OperatorNodeC5depthSiSgvp":{"name":"depth","abstract":"<p>The depth of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Node.html\">Node</a></code> in a <code>Tree</code></p>","parent_name":"OperatorNode"},"Classes/OperatorNode.html#/s:5Euler12OperatorNodeC8toStringSSyF":{"name":"toString()","abstract":"<p>Gives String representation of the node</p>","parent_name":"OperatorNode"},"Classes/OperatorNode.html#/s:5Euler12OperatorNodeC5toTexSSyF":{"name":"toTex()","abstract":"<p>Gives Tex (String) representation of the node</p>","parent_name":"OperatorNode"},"Classes/OperatorNode.html#/c:@M@Euler@objc(cs)OperatorNode(py)description":{"name":"description","abstract":"<p>The <code>print()</code> description</p>","parent_name":"OperatorNode"},"Classes/OperatorNode.html#/s:5Euler12OperatorNodeC7contentSSvp":{"name":"content","abstract":"<p>The sign of the operator (ex: <code>&quot;+&quot;</code> or <code>&quot;*&quot;</code>)</p>","parent_name":"OperatorNode"},"Classes/OperatorNode.html#/s:5Euler12OperatorNodeC4typeSSvp":{"name":"type","abstract":"<p>The name of the node</p>","parent_name":"OperatorNode"},"Classes/OperatorNode.html#/s:5Euler12OperatorNodeC8childrenSayAA0C0_pGvp":{"name":"children","abstract":"<p>The left and right hand sides of the operator</p>","parent_name":"OperatorNode"},"Classes/OperatorNode.html#/s:5Euler12OperatorNodeC_8childrenACSS_SayAA0C0_pGtcfc":{"name":"init(_:children:)","abstract":"<p>Creates an OperatorNode</p>","parent_name":"OperatorNode"},"Classes/OperatorNode.html#/s:5Euler12OperatorNodeC7compileAA0C0_pyF":{"name":"compile()","abstract":"<p>Compiles ConstantNode to simpler node (useless here, but required by protocol)</p>","parent_name":"OperatorNode"},"Classes/OperatorNode.html#/s:5Euler12OperatorNodeC8evaluateyAA9BigDoubleVSDySSAFGF":{"name":"evaluate(_:)","abstract":"<p>Converts OperatorNode to BigNumber</p>","parent_name":"OperatorNode"},"Classes/SymbolNode.html#/s:5Euler10SymbolNodeC8maxDepthSiSgvp":{"name":"maxDepth","abstract":"<p>The depth of the deepest children of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Node.html\">Node</a></code> in a <code>Tree</code></p>","parent_name":"SymbolNode"},"Classes/SymbolNode.html#/s:5Euler10SymbolNodeC5depthSiSgvp":{"name":"depth","abstract":"<p>The depth of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Node.html\">Node</a></code> in a <code>Tree</code></p>","parent_name":"SymbolNode"},"Classes/SymbolNode.html#/s:5Euler10SymbolNodeC8toStringSSyF":{"name":"toString()","abstract":"<p>Gives String representation of the node</p>","parent_name":"SymbolNode"},"Classes/SymbolNode.html#/s:5Euler10SymbolNodeC5toTexSSyF":{"name":"toTex()","abstract":"<p>Gives Tex (String) representation of the node</p>","parent_name":"SymbolNode"},"Classes/SymbolNode.html#/c:@M@Euler@objc(cs)SymbolNode(py)description":{"name":"description","abstract":"<p>The <code>print()</code> description</p>","parent_name":"SymbolNode"},"Classes/SymbolNode.html#/s:5Euler10SymbolNodeC7contentSSvp":{"name":"content","abstract":"<p>The name of the Symbol (ex: <code>x</code> or <code>y</code>)</p>","parent_name":"SymbolNode"},"Classes/SymbolNode.html#/s:5Euler10SymbolNodeC4typeSSvp":{"name":"type","abstract":"<p>The name of the node</p>","parent_name":"SymbolNode"},"Classes/SymbolNode.html#/s:5Euler10SymbolNodeC8childrenSayAA0C0_pGvp":{"name":"children","abstract":"<p>Useless here, but it&rsquo;s to conform to the Node protocol</p>","parent_name":"SymbolNode"},"Classes/SymbolNode.html#/s:5Euler10SymbolNodeCyACSScfc":{"name":"init(_:)","abstract":"<p>Create a SymbolNode</p>","parent_name":"SymbolNode"},"Classes/SymbolNode.html#/s:5Euler10SymbolNodeC7compileAA0C0_pyF":{"name":"compile()","abstract":"<p>Compiles SymbolNode to simpler node (useless here, but required by protocol)</p>","parent_name":"SymbolNode"},"Classes/SymbolNode.html#/s:5Euler10SymbolNodeC8evaluateyAA9BigDoubleVSDySSAFGF":{"name":"evaluate(_:)","abstract":"<p>Converts SymboleNode to BigNumber by replacing unknown value by their parameters. If it fails, it will return 0.</p>","parent_name":"SymbolNode"},"Classes/ConstantNode.html#/s:5Euler12ConstantNodeC8maxDepthSiSgvp":{"name":"maxDepth","abstract":"<p>The depth of the deepest children of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Node.html\">Node</a></code> in a <code>Tree</code></p>","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler12ConstantNodeC5depthSiSgvp":{"name":"depth","abstract":"<p>The depth of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Node.html\">Node</a></code> in a <code>Tree</code></p>","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler12ConstantNodeC8toStringSSyF":{"name":"toString()","abstract":"<p>Gives String representation of the node</p>","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler12ConstantNodeC5toTexSSyF":{"name":"toTex()","abstract":"<p>Gives Tex (String) representation of the node</p>","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/c:@M@Euler@objc(cs)ConstantNode(py)description":{"name":"description","abstract":"<p>Undocumented</p>","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler4NodeP7contentSSvp":{"name":"content","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler4NodeP4typeSSvp":{"name":"type","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler4NodeP8childrenSayAaB_pGvp":{"name":"children","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler12ConstantNodeCyAcA9BigDoubleVcfc":{"name":"init(_:)","abstract":"<p>Create a ConstantNode</p>","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler12ConstantNodeCyACSicfc":{"name":"init(_:)","abstract":"<p>Create a ConstantNode</p>","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler12ConstantNodeCyACSfcfc":{"name":"init(_:)","abstract":"<p>Create a ConstantNode</p>","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler12ConstantNodeCyACSdcfc":{"name":"init(_:)","abstract":"<p>Create a ConstantNode</p>","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler12ConstantNodeC7compileAA0C0_pyF":{"name":"compile()","abstract":"<p>Compiles ConstantNode to simpler node (useless here, but required by protocol)</p>","parent_name":"ConstantNode"},"Classes/ConstantNode.html#/s:5Euler12ConstantNodeC8evaluateyAA9BigDoubleVSDySSAFGF":{"name":"evaluate(_:)","abstract":"<p>Converts ConstantNode to BigNumber</p>","parent_name":"ConstantNode"},"Classes/ParenthesisNode.html#/s:5Euler15ParenthesisNodeC8toStringSSyF":{"name":"toString()","abstract":"<p>Gives String representation of the node</p>","parent_name":"ParenthesisNode"},"Classes/ParenthesisNode.html#/s:5Euler15ParenthesisNodeC5toTexSSyF":{"name":"toTex()","abstract":"<p>Gives Tex (String) representation of the node</p>","parent_name":"ParenthesisNode"},"Classes/ParenthesisNode.html#/s:5Euler15ParenthesisNodeC4typeSSvp":{"name":"type","abstract":"<p>Name of the Node</p>","parent_name":"ParenthesisNode"},"Classes/ExpressionNode.html#/s:5Euler14ExpressionNodeC8maxDepthSiSgvp":{"name":"maxDepth","abstract":"<p>The depth of the deepest children of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Node.html\">Node</a></code> in a <code>Tree</code></p>","parent_name":"ExpressionNode"},"Classes/ExpressionNode.html#/s:5Euler14ExpressionNodeC5depthSiSgvp":{"name":"depth","abstract":"<p>The depth of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Node.html\">Node</a></code> in a <code>Tree</code></p>","parent_name":"ExpressionNode"},"Classes/ExpressionNode.html#/s:5Euler14ExpressionNodeC8toStringSSyF":{"name":"toString()","abstract":"<p>Gives String representation of the node</p>","parent_name":"ExpressionNode"},"Classes/ExpressionNode.html#/s:5Euler14ExpressionNodeC5toTexSSyF":{"name":"toTex()","abstract":"<p>Gives Tex (String) representation of the node</p>","parent_name":"ExpressionNode"},"Classes/ExpressionNode.html#/c:@M@Euler@objc(cs)ExpressionNode(py)description":{"name":"description","abstract":"<p>The <code>print()</code> description</p>","parent_name":"ExpressionNode"},"Classes/ExpressionNode.html#/s:5Euler14ExpressionNodeC7contentSSvp":{"name":"content","abstract":"<p>Here it&rsquo;s useless, but it&rsquo;s required to conform to Node</p>","parent_name":"ExpressionNode"},"Classes/ExpressionNode.html#/s:5Euler14ExpressionNodeC4typeSSvp":{"name":"type","abstract":"<p>Name of the Node</p>","parent_name":"ExpressionNode"},"Classes/ExpressionNode.html#/s:5Euler14ExpressionNodeC8childrenSayAA0C0_pGvp":{"name":"children","abstract":"<p>Array of Node, containing the expressions</p>","parent_name":"ExpressionNode"},"Classes/ExpressionNode.html#/s:5Euler14ExpressionNodeCyAcA0C0_pd_tcfc":{"name":"init(_:)","abstract":"<p>Create a ExpressionNode</p>","parent_name":"ExpressionNode"},"Classes/ExpressionNode.html#/s:5Euler14ExpressionNodeCyACSayAA0C0_pGcfc":{"name":"init(_:)","abstract":"<p>Create a ExpressionNode</p>","parent_name":"ExpressionNode"},"Classes/ExpressionNode.html#/s:5Euler14ExpressionNodeC7compileAA0C0_pyF":{"name":"compile()","abstract":"<p>Compiles ExpressionNode to simpler node (useless here, but required by protocol)</p>","parent_name":"ExpressionNode"},"Classes/ExpressionNode.html#/s:5Euler14ExpressionNodeC8evaluateyAA9BigDoubleVSDySSAFGF":{"name":"evaluate(_:)","abstract":"<p>Converts ExpressionNode to BigNumber</p>","parent_name":"ExpressionNode"},"Protocols/Node.html#/s:5Euler4NodeP7contentSSvp":{"name":"content","abstract":"<p>This will be the string representation of the Node, it may change depending on the type of the Node</p>","parent_name":"Node"},"Protocols/Node.html#/s:5Euler4NodeP4typeSSvp":{"name":"type","abstract":"<p>The name in camelCase of the Node.</p>","parent_name":"Node"},"Protocols/Node.html#/s:5Euler4NodeP8childrenSayAaB_pGvp":{"name":"children","abstract":"<p>The Node&rsquo;s children in the expression tree</p>","parent_name":"Node"},"Protocols/Node.html#/s:5Euler4NodeP8evaluateyAA9BigDoubleVSDySSAFGF":{"name":"evaluate(_:)","abstract":"<p>Evaluate the mathematical expression behind each nodes</p>","parent_name":"Node"},"Protocols/Node.html#/s:5Euler4NodeP7compileAaB_pyF":{"name":"compile()","abstract":"<p>Compiles the Node and each of its children for easier parsing / evaluation</p>","parent_name":"Node"},"Protocols/Node.html#/s:5Euler4NodeP8toStringSSyF":{"name":"toString()","abstract":"<p>Gives String representation of the node</p>","parent_name":"Node"},"Protocols/Node.html#/s:5Euler4NodeP5toTexSSyF":{"name":"toTex()","abstract":"<p>Gives Tex (String) representation of the node</p>","parent_name":"Node"},"Protocols/Node.html#/s:5Euler4NodeP5depthSiSgvp":{"name":"depth","abstract":"<p>The depth of the <code>Node</code> in a <code>Tree</code></p>","parent_name":"Node"},"Protocols/Node.html#/s:5Euler4NodeP8maxDepthSiSgvp":{"name":"maxDepth","abstract":"<p>The depth of the deepest children of the <code>Node</code> in a <code>Tree</code></p>","parent_name":"Node"},"Enums/Token.html#/s:5Euler5TokenO6SymbolyACSScACmF":{"name":"Symbol(_:)","abstract":"<p>Undocumented</p>","parent_name":"Token"},"Enums/Token.html#/s:5Euler5TokenO6NumberyACSfcACmF":{"name":"Number(_:)","abstract":"<p>Undocumented</p>","parent_name":"Token"},"Enums/Token.html#/s:5Euler5TokenO10ParensOpenyA2CmF":{"name":"ParensOpen","abstract":"<p>Undocumented</p>","parent_name":"Token"},"Enums/Token.html#/s:5Euler5TokenO11ParensCloseyA2CmF":{"name":"ParensClose","abstract":"<p>Undocumented</p>","parent_name":"Token"},"Enums/Token.html#/s:5Euler5TokenO5OtheryACSScACmF":{"name":"Other(_:)","abstract":"<p>Undocumented</p>","parent_name":"Token"},"Classes/Group.html#/c:@M@Euler@objc(cs)Group(py)description":{"name":"description","abstract":"<p>Undocumented</p>","parent_name":"Group"},"Classes/Grouper.html#/s:5Euler7GrouperC5groupSayAA5GroupCGyKF":{"name":"group()","abstract":"<p>Groups the given tokens into an array of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Group.html\">Group</a></code></p>","parent_name":"Grouper"},"Classes/Lexer.html#/s:5Euler5LexerC5inputACSS_tcfc":{"name":"init(input:)","abstract":"<p>Initializes the <code>Lexer</code></p>","parent_name":"Lexer"},"Classes/Lexer.html#/s:5Euler5LexerC8tokenizeSayAA5TokenOGyF":{"name":"tokenize()","abstract":"<p>Tokenize the String input</p>","parent_name":"Lexer"},"Classes/Parser.html#/s:5Euler6ParserCyACSScfc":{"name":"init(_:)","abstract":"<p>Initialize <code>Parser</code> with a mathematical expression as a String ( ASCIIMath)</p>","parent_name":"Parser"},"Classes/Parser.html#/s:5Euler6ParserC6tokensACSayAA5TokenOG_tcfc":{"name":"init(tokens:)","abstract":"<p>Initialize <code>Parser</code> with a list of tokens given by the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Lexer.html\">Lexer</a></code></p>","parent_name":"Parser"},"Classes/Parser.html#/s:5Euler6ParserC5parseAA14ExpressionNodeCyKF":{"name":"parse()","abstract":"<p>This function will be in charge of parsing the expression.</p>","parent_name":"Parser"},"Classes/Parser.html":{"name":"Parser","abstract":"<p>The <code>Parser</code> converts a mathematical expression to a tree.</p>"},"Classes/Lexer.html":{"name":"Lexer","abstract":"<p>The <code>Lexer</code> is converting a sequence of characters (mathematical expression) into a sequence of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Token.html\">Token</a></code></p>"},"Classes/Grouper.html":{"name":"Grouper","abstract":"<p>The <code>Grouper</code> is the class that will be in charged of converting an array of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/Token.html\">Token</a></code> into an array of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Group.html\">Group</a></code> in the process of parsing a mathematical expression.</p>"},"Classes/Group.html":{"name":"Group","abstract":"<p>A <code>Group</code> is a intermediate representation object for representing a mathematical expression."},"Enums/Token.html":{"name":"Token","abstract":"<p>Possible Tokens in a mathematical expression.</p>"},"Protocols/Node.html":{"name":"Node","abstract":"<p>An entity that helps build a tree when parsing math expressions</p>"},"Classes/ExpressionNode.html":{"name":"ExpressionNode","abstract":"<p>An ExpressionNode is a Node containing 1 or more expression.</p>"},"Classes/ParenthesisNode.html":{"name":"ParenthesisNode","abstract":"<p>A ParenthesisNode is an ExpressionNode used to treat parenthesis</p>"},"Classes/ConstantNode.html":{"name":"ConstantNode","abstract":"<p>This is a Node object that represents a number as a BigDouble</p>"},"Classes/SymbolNode.html":{"name":"SymbolNode","abstract":"<p>Undocumented</p>"},"Classes/OperatorNode.html":{"name":"OperatorNode","abstract":"<p>Undocumented</p>"},"Classes/FunctionNode.html":{"name":"FunctionNode","abstract":"<p>A Node that represents a mathematical function</p>"},"Classes/NullNode.html":{"name":"NullNode","abstract":"<p>This is a Node object that represents an empty Node</p>"},"Structs/Sieve.html#/s:5Euler5SieveVACycfc":{"name":"init()","abstract":"<p>Creates a Sieve <code>IteratorProtocol</code> / <code>Sequence</code></p>","parent_name":"Sieve"},"Structs/Sieve.html#/s:5Euler5SieveV4nextAA6BigIntVSgyF":{"name":"next()","abstract":"<p>Return the next prime number</p>","parent_name":"Sieve"},"Structs/Sieve.html#/s:5Euler5SieveV12makeIteratorACyF":{"name":"makeIterator()","abstract":"<p>Makes Sieve conforming to the <code>Sequence</code> protocol</p>","parent_name":"Sieve"},"Structs/Sieve.html#/s:5Euler5SieveV8nthPrime1nAA6BigIntVSgAG_tFZ":{"name":"nthPrime(n:)","abstract":"<p>Gives the nth prime</p>","parent_name":"Sieve"},"Structs/Fibonacci.html#/s:5Euler9FibonacciVACycfc":{"name":"init()","abstract":"<p>Creates a Fibonacci <code>IteratorProtocol</code> / <code>Sequence</code></p>","parent_name":"Fibonacci"},"Structs/Fibonacci.html#/s:5Euler9FibonacciV4nextAA6BigIntVSgyF":{"name":"next()","abstract":"<p>Return the current number in the Fibonacci sequence.","parent_name":"Fibonacci"},"Structs/Fibonacci.html#/s:5Euler9FibonacciV12makeIteratorACyF":{"name":"makeIterator()","abstract":"<p>Makes Fibonacci conforming to the <code>Sequence</code> protocol</p>","parent_name":"Fibonacci"},"Structs/Collatz.html#/s:5Euler7CollatzVyAcA6BigIntVcfc":{"name":"init(_:)","abstract":"<p>Initialize the collatz sequence</p>","parent_name":"Collatz"},"Structs/Collatz.html#/s:5Euler7CollatzV4nextAA6BigIntVSgyF":{"name":"next()","abstract":"<p>Next value</p>","parent_name":"Collatz"},"Structs/Collatz.html#/s:5Euler7CollatzV12makeIteratorACyF":{"name":"makeIterator()","abstract":"<p>Makes Collatz conforming to the <code>Sequence</code> protocol</p>","parent_name":"Collatz"},"Structs/Collatz.html":{"name":"Collatz","abstract":"<p>An Iterator for the Collatz conjecture</p>"},"Structs/Fibonacci.html":{"name":"Fibonacci","abstract":"<p>An Iterator for the Fibonacci sequence</p>"},"Structs/Sieve.html":{"name":"Sieve","abstract":"<p>A generator for finding prime numbers</p>"},"Classes/Statistics.html#/s:5Euler10StatisticsC4listSayAA9BigDoubleVGvp":{"name":"list","abstract":"<p>The list used for statistical computations</p>","parent_name":"Statistics"},"Classes/Statistics.html#/s:5Euler10StatisticsC4listACSayAA9BigDoubleVG_tcfc":{"name":"init(list:)","abstract":"<p>Creates a <code>Statistics</code> object</p>","parent_name":"Statistics"},"Classes/Statistics.html#/s:5Euler10StatisticsCyACSdd_tcfc":{"name":"init(_:)","abstract":"<p>Creates a <code>Statistics</code> object</p>","parent_name":"Statistics"},"Classes/Statistics.html#/s:5Euler10StatisticsC7averageAA9BigDoubleVvp":{"name":"average","abstract":"<p>Return the arithmetic mean (average) of the list</p>","parent_name":"Statistics"},"Classes/Statistics.html#/s:5Euler10StatisticsC7average12coefficientsAA9BigDoubleVSayAGG_tKF":{"name":"average(coefficients:)","abstract":"<p>Return the weighted arithmetic mean (average) of the list with the given coefficients</p>","parent_name":"Statistics"},"Classes/Statistics.html":{"name":"Statistics","abstract":"<p>The class that helps to process numerical data</p>"},"Operations%20%2F%20Functions.html#/s:5Euler3absyAA9BigDoubleVADF":{"name":"abs(_:)","abstract":"<p>Returns the absolute value of the given number.</p>"},"Operations%20%2F%20Functions.html#/s:5Euler4ceilyAA6BigIntVAA0C6DoubleVF":{"name":"ceil(_:)","abstract":"<p>round to smallest BigNumber value not less than base</p>"},"Operations%20%2F%20Functions.html#/s:5Euler12combinationsyAA6BigIntVSi_SitF":{"name":"combinations(_:_:)","abstract":"<p>Combinations: <code>(n + k - 1)! / (k! * (n - 1)!)</code></p>"},"Operations%20%2F%20Functions.html#/s:5Euler26combinationsWithRepititionyAA6BigIntVSi_SitF":{"name":"combinationsWithRepitition(_:_:)","abstract":"<p>Combinations with repetitions: <code>(n + k - 1)! / (k! * (n - 1)!)</code></p>"},"Operations%20%2F%20Functions.html#/s:5Euler9encodeMD56digestSSSays5UInt8VG_tF":{"name":"encodeMD5(digest:)","abstract":"<p>Encodes array of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbOther%20Typealiases.html#/s:5Euler4Bytea\">Byte</a></code> to MD5</p>"},"Operations%20%2F%20Functions.html#/s:5Euler5flooryAA6BigIntVAA0C6DoubleVF":{"name":"floor(_:)","abstract":"<p>round to largest BigNumber value not greater than base</p>"},"Operations%20%2F%20Functions.html#/s:5Euler3gcdyAA6BigIntVAD_ADtF":{"name":"gcd(_:_:)","abstract":"<p>greatest common divisor.</p>"},"Operations%20%2F%20Functions.html#/s:5Euler9gcdEuclidyAA6BigIntVAD_ADtF":{"name":"gcdEuclid(_:_:)","abstract":"<p>Do not use this, extremely slow. Only for testing purposes.</p>"},"Operations%20%2F%20Functions.html#/s:5Euler3lcmyAA6BigIntVAD_ADtF":{"name":"lcm(_:_:)","abstract":"<p>lowest (or least) common multiple.</p>"},"Operations%20%2F%20Functions.html#/s:5Euler3maxyAA9BigDoubleVAD_ADtF":{"name":"max(_:_:)","abstract":"<p>Returns the BigDouble that is largest</p>"},"Operations%20%2F%20Functions.html#/s:5Euler3minyAA9BigDoubleVAD_ADtF":{"name":"min(_:_:)","abstract":"<p>Returns the BigDouble that is the smallest</p>"},"Operations%20%2F%20Functions.html#/s:5Euler7mod_addyAA6BigIntVAD_A2DtF":{"name":"mod_add(_:_:_:)","abstract":"<p>Convenience function combinding addition and non-negative modulo operations</p>"},"Operations%20%2F%20Functions.html#/s:5Euler7mod_expyAA6BigIntVAD_A2DtF":{"name":"mod_exp(_:_:_:)","abstract":"<p>Quick exponentiation/modulo algorithm"},"Operations%20%2F%20Functions.html#/s:5Euler5nnmodyAA6BigIntVAD_ADtF":{"name":"nnmod(_:_:)","abstract":"<p>Non-negative modulo operation</p>"},"Operations%20%2F%20Functions.html#/s:5Euler12permutationsyAA6BigIntVSi_SitF":{"name":"permutations(_:_:)","abstract":"<p>Permutations: <code>n! / (n-k)!</code></p>"},"Operations%20%2F%20Functions.html#/s:5Euler26permutationsWithRepititionyAA6BigIntVSi_SitF":{"name":"permutationsWithRepitition(_:_:)","abstract":"<p>Permutations with repetition: <code>n ** k</code></p>"},"Operations%20%2F%20Functions.html#/s:5Euler3powyAA9BigDoubleVAD_SitF":{"name":"pow(_:_:)","abstract":"<p>Returns a BigDouble number raised to a given power.</p>"},"Operations%20%2F%20Functions.html#/s:5Euler3powyAA9BigDoubleVAD_AA0C3IntVtF":{"name":"pow(_:_:)","abstract":"<p>Returns a BigDouble number raised to a given power.</p>"},"Operations%20%2F%20Functions.html#/s:5Euler3powyAA9BigDoubleVAD_ADtF":{"name":"pow(_:_:)","abstract":"<div class=\"aside aside-warning\">"},"Operations%20%2F%20Functions.html#/s:5Euler8steinGcdySays6UInt64VGAE_AEtF":{"name":"steinGcd(_:_:)","abstract":"<p>The binary GCD algorithm, also known as Stein&rsquo;s algorithm, is an algorithm that computes the greatest common divisor of two nonnegative integers. Stein&rsquo;s algorithm uses simpler arithmetic operations than the conventional Euclidean algorithm; it replaces division with arithmetic shifts, comparisons, and subtraction.</p>"},"Enums/Constant.html#/s:5Euler8ConstantO17alphaParticleMassyA2CmF":{"name":"alphaParticleMass","abstract":"<p>The mass in <code>kg</code> of alpha particles</p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO10atomicMassyA2CmF":{"name":"atomicMass","abstract":"<p>The mass in <code>kg</code> of an atom (see Wikipedia for more info)</p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO8AvogadroyA2CmF":{"name":"Avogadro","abstract":"<p>Avogadro constant in <code>mol^(-1)</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO9BoltzmannyA2CmF":{"name":"Boltzmann","abstract":"<p>Boltzmann constant in <code>J/K</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO18conductanceQuantumyA2CmF":{"name":"conductanceQuantum","abstract":"<p>Quantized unit of electrical conductance in <code>S</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO1eyA2CmF":{"name":"e","abstract":"<p>The mathematical constant</p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO10earth_moonyA2CmF":{"name":"earth_moon","abstract":"<p>Earth to moon distance in <code>km</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO9earth_sunyA2CmF":{"name":"earth_sun","abstract":"<p>Earth to sun distance in <code>km</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO9earthMassyA2CmF":{"name":"earthMass","abstract":"<p>Earth mass in <code>kg</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO11earthRadiusyA2CmF":{"name":"earthRadius","abstract":"<p>Earth radius in <code>km</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO8electricyA2CmF":{"name":"electric","abstract":"<p>Vacuum permittivity in <code>F/m</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO12electronMassyA2CmF":{"name":"electronMass","abstract":"<p>Electron mass in <code>kg</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO16elementaryChargeyA2CmF":{"name":"elementaryCharge","abstract":"<p>Elementary charge in <code>C</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO0A5GammayA2CmF":{"name":"EulerGamma","abstract":"<p>Euler–Mascheroni Gamma constant</p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO7FaradayyA2CmF":{"name":"Faraday","abstract":"<p>Faraday constant in <code>C/mol</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO13fineStructureyA2CmF":{"name":"fineStructure","abstract":"<p>Fine structure constant</p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO11goldenRatioyA2CmF":{"name":"goldenRatio","abstract":"<p>Golden ratio</p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO7gravityyA2CmF":{"name":"gravity","abstract":"<p>Standard acceleration due to gravity constant in <code>m/s^2</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO20inverseFineStructureyA2CmF":{"name":"inverseFineStructure","abstract":"<p>Invverse of fine structure constant</p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO8magneticyA2CmF":{"name":"magnetic","abstract":"<p>Vacuum permeability in <code>H/m</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO19magneticFluxQuantumyA2CmF":{"name":"magneticFluxQuantum","abstract":"<p>Magnetic flux quantum constant in <code>Wb</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO8molarGasyA2CmF":{"name":"molarGas","abstract":"<p>Gas constant in <code>J/K/mol</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO8moonMassyA2CmF":{"name":"moonMass","abstract":"<p>Mass of the moon in <code>kg</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO10moonRadiusyA2CmF":{"name":"moonRadius","abstract":"<p>Moon radius in <code>km</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO11neutronMassyA2CmF":{"name":"neutronMass","abstract":"<p>Mass of neutron in <code>kg</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO17NewtonGravitationyA2CmF":{"name":"NewtonGravitation","abstract":"<p>Newton&rsquo;s gravitational constant in <code>m3⋅kg−1⋅s−2</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO2piyA2CmF":{"name":"pi","abstract":"<p>The mathematical constant</p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO6PlanckyA2CmF":{"name":"Planck","abstract":"<p>Planck constant in <code>J s</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO24proton_electronMassRatioyA2CmF":{"name":"proton_electronMassRatio","abstract":"<p>Proton mass divided by electron mass</p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO23proton_neutronMassRatioyA2CmF":{"name":"proton_neutronMassRatio","abstract":"<p>Proton mass divided by neutron mass</p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO10protonMassyA2CmF":{"name":"protonMass","abstract":"<p>Proton mass in <code>kg</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO7RydbergyA2CmF":{"name":"Rydberg","abstract":"<p>Rydberg constant in <code>m^(-1)</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO12speedOfLightyA2CmF":{"name":"speedOfLight","abstract":"<p>Speed of light in <code>m/s</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO12speedOfSoundyA2CmF":{"name":"speedOfSound","abstract":"<p>Speed of sound in <code>m/s</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO5sqrt2yA2CmF":{"name":"sqrt2","abstract":"<p>The square root of 2</p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO16Stefan_BoltzmannyA2CmF":{"name":"Stefan_Boltzmann","abstract":"<p>Stefan-Boltzmann constant in <code>W m^(-2) K^(-4)</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO7sunMassyA2CmF":{"name":"sunMass","abstract":"<p>Mass of the sun in <code>kg</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO9sunRadiusyA2CmF":{"name":"sunRadius","abstract":"<p>Sun&rsquo;s radius in <code>km</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO11TheRockMassyA2CmF":{"name":"TheRockMass","abstract":"<p>Dwayne Johnson&rsquo;s mass. Can&rsquo;t mathematician have the sense of humour?</p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO19ThomsonCrossSectionyA2CmF":{"name":"ThomsonCrossSection","abstract":"<p>Thomson Cross Section constant in <code>m^2</code></p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO14UltimateAnsweryA2CmF":{"name":"UltimateAnswer","abstract":"<p>The Answer to the Ultimate Question of Life, the Universe, and Everything.</p>","parent_name":"Constant"},"Enums/Constant.html#/s:5Euler8ConstantO10zeroKelvinyA2CmF":{"name":"zeroKelvin","abstract":"<p>The coldest temperature in the universe in <code>C</code></p>","parent_name":"Constant"},"Constant.html#/s:5Euler2piAA9BigDoubleVvp":{"name":"pi","abstract":"<p>The mathematical constant</p>"},"Constant.html#/s:5Euler1eAA9BigDoubleVvp":{"name":"e","abstract":"<p>The mathematical constant</p>"},"Enums/Constant.html":{"name":"Constant","abstract":"<p>A list of important mathematical and physical constants</p>"},"Structs/BigDouble.html#/s:Sj9MagnitudeQa":{"name":"Magnitude","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:Sj9magnitude9MagnitudeQzvp":{"name":"magnitude","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:Sj7exactlyxSgqd___tcSzRd__lufc":{"name":"init(exactly:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleVyAcA0B3IntVcfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV4sign9numerator11denominatorACSb_Says6UInt64VGAItcfc":{"name":"init(sign:numerator:denominator:)","abstract":"<p>Inits a BigDouble with two Limbs as numerator and denominator</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV_4overAcA0B3IntV_AFtcfc":{"name":"init(_:over:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV_4overACSi_Sitcfc":{"name":"init(_:over:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV_4overACSgSS_SStcfc":{"name":"init(_:over:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleVyACSgSScfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV_5radixACSgSS_Sitcfc":{"name":"init(_:radix:)","abstract":"<p>Create an instance initialized to a string with the value of mathematical numerical system of the specified radix (base).","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleVyACSicfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleVyACSdcfc":{"name":"init(_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc":{"name":"init(integerLiteral:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:s25ExpressibleByFloatLiteralP05floatD0x0cD4TypeQz_tcfc":{"name":"init(floatLiteral:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV8constantAcA8ConstantO_tcfc":{"name":"init(constant:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV11descriptionSSvp":{"name":"description","abstract":"<p>returns the current value in a fraction format</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV19fractionDescriptionSSvp":{"name":"fractionDescription","abstract":"<p>returns the current value in a fraction format</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV9precisionSivpZ":{"name":"precision","abstract":"<p>the global percision for all newly created values</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV9precisionSivp":{"name":"precision","abstract":"<p>the precision for the current value</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV18decimalDescriptionSSvp":{"name":"decimalDescription","abstract":"<p>returns the current value in decimal format with the current precision</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV16decimalExpansion26precisionAfterDecimalPoint7roundedSSSi_SbtF":{"name":"decimalExpansion(precisionAfterDecimalPoint:rounded:)","abstract":"<p>Returns the current value in decimal format (always with a decimal point).</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV4sizeSivp":{"name":"size","abstract":"<p>Returns the size of the BigDouble in bits.</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV15sizeDescriptionSSvp":{"name":"sizeDescription","abstract":"<p>Returns a formated human readable string that says how much space","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV7rawDataSb4sign_Says6UInt64VG9numeratorAH11denominatortyF":{"name":"rawData()","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV10isPositiveSbyF":{"name":"isPositive()","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV10isNegativeSbyF":{"name":"isNegative()","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV6isZeroSbyF":{"name":"isZero()","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV8minimizeyyF":{"name":"minimize()","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV7roundedAA0B3IntVyF":{"name":"rounded()","abstract":"<p>If the right side of the decimal is greater than 0.5 then it will round up (ceil),","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV7nthrootyACSiF":{"name":"nthroot(_:)","abstract":"<p>The power of 1/root</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV10squareRootACyF":{"name":"squareRoot()","abstract":"<p>The square root</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:s18AdditiveArithmeticP1poiyxx_xtFZ":{"name":"+(_:_:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1poiyA2C_SdtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1poiyACSd_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1poiyA2C_AA0B3IntVtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1poiyAcA0B3IntV_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:s18AdditiveArithmeticP2peoiyyxz_xtFZ":{"name":"+=(_:_:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2peoiyyACz_SdtFZ":{"name":"+=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV6negateyyF":{"name":"negate()","abstract":"<p>makes the current value negative</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:s13SignedNumericP1sopyxxFZ":{"name":"-(_:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:s18AdditiveArithmeticP1soiyxx_xtFZ":{"name":"-(_:_:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1soiyA2C_SdtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1soiyACSd_ACtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1soiyA2C_AA0B3IntVtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:s18AdditiveArithmeticP2seoiyyxz_xtFZ":{"name":"-=(_:_:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2seoiyyACz_SdtFZ":{"name":"-=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:Sj1moiyxx_xtFZ":{"name":"*(_:_:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1moiyA2C_SdtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1moiyACSd_ACtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1moiyA2C_AA0B3IntVtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1moiyAcA0B3IntV_ACtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:Sj2meoiyyxz_xtFZ":{"name":"*=(_:_:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2meoiyyACz_SdtFZ":{"name":"*=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2mmoiyA2C_SitFZ":{"name":"**(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2mmoiyA2C_AA0B3IntVtFZ":{"name":"**(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2mmoiyA2C_ACtFZ":{"name":"**(_:_:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1doiyA2C_ACtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1doiyA2C_SdtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1doiyA2C_AA0B3IntVtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1doiyACSd_ACtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV11nearlyEqual__7epsilonSbAC_ACSdtFZ":{"name":"nearlyEqual(_:_:epsilon:)","abstract":"<p>An == comparison with an epsilon (fixed then a calculated &ldquo;ULPs&rdquo;)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2eeoiySbAC_SdtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2eeoiySbSd_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2neoiySbAC_ACtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2neoiySbAC_SdtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2neoiySbSd_ACtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1loiySbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1loiySbAC_SdtFZ":{"name":"<(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1loiySbSd_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1goiySbAC_ACtFZ":{"name":">(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1goiySbAC_SdtFZ":{"name":">(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV1goiySbSd_ACtFZ":{"name":">(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2leoiySbAC_ACtFZ":{"name":"<=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2leoiySbAC_SdtFZ":{"name":"<=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2leoiySbSd_ACtFZ":{"name":"<=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2geoiySbAC_ACtFZ":{"name":">=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2geoiySbAC_SdtFZ":{"name":">=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigDouble.html#/s:5Euler9BigDoubleV2geoiySbSd_ACtFZ":{"name":">=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigDouble"},"Structs/BigInt.html#/s:Sj9MagnitudeQa":{"name":"Magnitude","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sj9magnitude9MagnitudeQzvp":{"name":"magnitude","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz5WordsQa":{"name":"Words","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz5words5WordsQzvp":{"name":"words","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV4sizeSivp":{"name":"size","abstract":"<p>Returns the size of the BigNumber in bits.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV15sizeDescriptionSSvp":{"name":"sizeDescription","abstract":"<p>Returns a formated human readable string that says how much space (in bytes, kilobytes, megabytes, or gigabytes) the BigNumber occupies.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntVyACSicfc":{"name":"init(_:)","abstract":"<p>Create an instance initialized to an integer value.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntVyACSucfc":{"name":"init(_:)","abstract":"<p>Create an instance initialized to an unsigned integer value.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntVyACSgSScfc":{"name":"init(_:)","abstract":"<p>Create an instance initialized to a string value.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV_5radixACSgSS_Sitcfc":{"name":"init(_:radix:)","abstract":"<p>Create an instance initialized to a string with the value of mathematical numerical","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV14prefixedNumberACSgSS_tcfc":{"name":"init(prefixedNumber:)","abstract":"<p>Create an instance initialized to a string with the value of mathematical numerical","parent_name":"BigInt"},"Structs/BigInt.html#/s:s25ExpressibleByFloatLiteralP05floatD0x0cD4TypeQz_tcfc":{"name":"init(floatLiteral:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:s27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc":{"name":"init(integerLiteral:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sj7exactlyxSgqd___tcSzRd__lufc":{"name":"init(exactly:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntVyACxcSBRzlufc":{"name":"init(_:)","abstract":"<p>Creates an integer from the given floating-point value, rounding toward zero.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntVyACxcSzRzlufc":{"name":"init(_:)","abstract":"<p>Creates a new instance from the given integer.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV8clampingACx_tcSzRzlufc":{"name":"init(clamping:)","abstract":"<p>Creates a new instance with the representable value that’s closest to the given integer.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV7exactlyACSgx_tcSBRzlufc":{"name":"init(exactly:)","abstract":"<p>Creates an integer from the given floating-point value, if it can be represented","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV18truncatingIfNeededACx_tcSzRzlufc":{"name":"init(truncatingIfNeeded:)","abstract":"<p>Creates a new instance from the bit pattern of the given instance by sign-extending or","parent_name":"BigInt"},"Structs/BigInt.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV8asString5radixSSSi_tF":{"name":"asString(radix:)","abstract":"<p>Returns the BigNumber&rsquo;s value in the given base (radix) as a string.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:SH4hash4intoys6HasherVz_tF":{"name":"hash(into:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz8isSignedSbvpZ":{"name":"isSigned","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz8bitWidthSivp":{"name":"bitWidth","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV6signumACyF":{"name":"signum()","abstract":"<p>Returns -1 if this value is negative and 1 if it’s positive; otherwise, 0.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV20trailingZeroBitCountSivp":{"name":"trailingZeroBitCount","abstract":"<p>The number of trailing zeros in this value’s binary representation.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz2lloiyxx_qd__tSzRd__lFZ":{"name":"<<(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz3lleoiyyxz_qd__tSzRd__lFZ":{"name":"<<=(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz2ggoiyxx_qd__tSzRd__lFZ":{"name":">>(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz3ggeoiyyxz_qd__tSzRd__lFZ":{"name":">>=(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV1aoiyA2C_ACtFZ":{"name":"&(_:_:)","abstract":"<p>Returns the result of performing a bitwise AND operation on the two given values.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV2aeoiyyACz_ACtFZ":{"name":"&=(_:_:)","abstract":"<p>Stores the result of performing a bitwise AND operation on the two given values in the","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz1ooiyxx_xtFZ":{"name":"|(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz2oeoiyyxz_xtFZ":{"name":"|=(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz1xoiyxx_xtFZ":{"name":"^(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz2xeoiyyxz_xtFZ":{"name":"^=(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz1topyxxFZ":{"name":"~(_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV9factorialACyF":{"name":"factorial()","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV1popyA2CFZ":{"name":"+(_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz2peoiyyxz_xtFZ":{"name":"+=(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz1poiyxx_xtFZ":{"name":"+(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV1poiyACSi_ACtFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV1poiyA2C_SitFZ":{"name":"+(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV2peoiyySiz_ACtFZ":{"name":"+=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV2peoiyyACz_SitFZ":{"name":"+=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:s13SignedNumericP6negateyyF":{"name":"negate()","parent_name":"BigInt"},"Structs/BigInt.html#/s:s13SignedNumericP1sopyxxFZ":{"name":"-(_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz1soiyxx_xtFZ":{"name":"-(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV1soiyACSi_ACtFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV1soiyA2C_SitFZ":{"name":"-(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz2seoiyyxz_xtFZ":{"name":"-=(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV2seoiyySiz_ACtFZ":{"name":"-=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV2seoiyyACz_SitFZ":{"name":"-=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz1moiyxx_xtFZ":{"name":"*(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV1moiyACSi_ACtFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV1moiyA2C_SitFZ":{"name":"*(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz2meoiyyxz_xtFZ":{"name":"*=(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV2meoiyySiz_ACtFZ":{"name":"*=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV2meoiyyACz_SitFZ":{"name":"*=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV2mmoiyA2C_SitFZ":{"name":"**(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV20quotientAndRemainder10dividingByAC0D0_AC9remaindertAC_tF":{"name":"quotientAndRemainder(dividingBy:)","abstract":"<p>Returns the quotient and remainder of this value divided by the given value.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz1doiyxx_xtFZ":{"name":"/(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV1doiyACSi_ACtFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV1doiyA2C_SitFZ":{"name":"/(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz2deoiyyxz_xtFZ":{"name":"/=(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV2deoiyyACz_SitFZ":{"name":"/=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz1roiyxx_xtFZ":{"name":"%(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV1roiyACSi_ACtFZ":{"name":"%(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV1roiyA2C_SitFZ":{"name":"%(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:Sz2reoiyyxz_xtFZ":{"name":"%=(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV2reoiyyACz_SitFZ":{"name":"%=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV2eeoiySbAC_xtSzRzlFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV2eeoiySbx_ACtSzRzlFZ":{"name":"==(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV2neoiySbAC_ACtFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV2neoiySbAC_xtSzRzlFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV2neoiySbx_ACtSzRzlFZ":{"name":"!=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV1loiySbAC_xtSzRzlFZ":{"name":"<(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV1loiySbSi_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV1loiySbAC_SitFZ":{"name":"<(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:SL1goiySbx_xtFZ":{"name":">(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV1goiySbSi_ACtFZ":{"name":">(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV1goiySbAC_SitFZ":{"name":">(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:SL2leoiySbx_xtFZ":{"name":"<=(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV2leoiySbSi_ACtFZ":{"name":"<=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV2leoiySbAC_SitFZ":{"name":"<=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:SL2geoiySbx_xtFZ":{"name":">=(_:_:)","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV2geoiySbSi_ACtFZ":{"name":">=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV2geoiySbAC_SitFZ":{"name":">=(_:_:)","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV9fibonacciACvp":{"name":"fibonacci","abstract":"<p>Undocumented</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV7isPrimeSbvp":{"name":"isPrime","abstract":"<p>Check if the BigInt is a prime.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV10isMersenneSbvp":{"name":"isMersenne","abstract":"<p>Returns true iff (2 ** exp) - 1 is a mersenne prime.</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV06randomB6Number4bitsACSi_tFZ":{"name":"randomBigNumber(bits:)","abstract":"<p>Generate a random BigInt</p>","parent_name":"BigInt"},"Structs/BigInt.html#/s:5Euler6BigIntV6randomyACSicvpZ":{"name":"random","abstract":"<p>Alias of <code>randomBigNumber</code></p>","parent_name":"BigInt"},"Structs/BigInt.html":{"name":"BigInt","abstract":"<p>BigNumber is an arbitrary precision integer value type. It stores a number in base 2^64 notation"},"Structs/BigDouble.html":{"name":"BigDouble","abstract":"<p>Undocumented</p>"},"Numbers.html#/s:5Euler8BigFloata":{"name":"BigFloat","abstract":"<p>Undocumented</p>"},"Numbers.html#/s:5Euler9BigNumbera":{"name":"BigNumber","abstract":"<p>Undocumented</p>"},"Numbers.html":{"name":"Numbers"},"Constant.html":{"name":"Constant"},"Operations%20%2F%20Functions.html":{"name":"Operations / Functions"},"Statistics.html":{"name":"Statistics"},"Generators.html":{"name":"Generators"},"Algebra%20Parser.html":{"name":"Algebra Parser"},"Cryptography.html":{"name":"Cryptography"},"Array%20manipulation.html":{"name":"Array manipulation"},"Other%20Extensions.html":{"name":"Other Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Other%20Functions.html":{"name":"Other Functions","abstract":"<p>The following functions are available globally.</p>"},"Other%20Structs.html":{"name":"Other Structures","abstract":"<p>The following structures are available globally.</p>"},"Other%20Typealiases.html":{"name":"Other Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}